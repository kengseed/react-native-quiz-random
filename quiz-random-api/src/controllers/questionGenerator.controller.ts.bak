import { Request, Response, NextFunction } from "express";
import Quiz from "../models/quiz.model";

import * as fs from 'fs';

interface IQuestion {
    question: string;
    A: string;
    B: string;
    C: string;
    D: string;
    answer: string;
}

class QuizController {
    constructor() {
        this.initialize();
    }

    private initialize() {
        this.getRandomQuestions = this.getRandomQuestions.bind(this);

    }

    private readQuestionJson() {
        var file = fs.readFileSync("./src/data/questions.json", "utf8");
        return JSON.parse(file);
    }

    private generateNewJson() {
        var json: IQuestion[] = this.readQuestionJson();
        var newObj: Quiz[] = [];

        json.forEach(item => {
            newObj.push({
                question: item.question,
                answers: [{ key: "A", value: item.A }, { key: "B", value: item.B }, { key: "C", value: item.C }, { key: "D", value: item.D }],
                validAnswer: item.answer
            });
        });

        let newJson = JSON.stringify(newObj);
        // fs.writeFile('newQuestion.json', newJson, "utf8", callBack);
        fs.writeFile("./src/data/newQuestion.json", newJson, err => {
            if (err) {
                console.error(err);
            } else {
                // file written successfully
            }
        });

    }

    private shuffleArray(array: Quiz[]) {
        for (let i = array.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [array[i], array[j]] = [array[j], array[i]];
        }

        return array;
    }

    getRandomQuestions(req: Request, res: Response, next: NextFunction) {
        this.generateNewJson();


        res.json({ data: null });
        // res.json({ data: this.dataList });
    }
}

export default new QuizController();